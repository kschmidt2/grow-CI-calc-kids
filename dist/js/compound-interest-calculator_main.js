var calculator=new Vue({el:"#calculator",data:{principal:5e3,frequency:1,contribution:100,yearsToGrow:10,interestRate:7,totalPrincipal:"",totalReturn:"",futureBalance:""},methods:{getResults:function(){let t,e,a,n,r=this.principal,o=this.interestRate/100,s=this.frequency,l=this.yearsToGrow,c=this.contribution,u=r+c*l,h=r,d=0,m=[],g=[],p=[],f=5;for(year=(new Date).getFullYear(),i=0;i<s*l;i++)t=(a=(h*=1+o/s)+(d=(d+c)*(1+o/s)))-(e=c*(i+1)+r),m.push(e),g.push(t),(n=i+1+(year-2e3)).toString(),n="'"+n,p.push(n);m.unshift(r),g.unshift(0),p.unshift(year),m.length>21&&(f=10),12==s&&(m=m.filter((t,e)=>e%12==0),g=g.filter((t,e)=>e%12==0)),this.drawChart(m,g,p,f),this.futureBalance=h+d,t=this.futureBalance-u,this.futureBalance=this.futureBalance.toLocaleString(void 0,{minimumFractionDigits:0,maximumFractionDigits:0})},drawChart:function(t,e,i,a){function n(){Highcharts.chart("chart-container-CIcalc",{chart:{type:"column",styledMode:!0,spacingBottom:0,spacingRight:20,spacingLeft:20,animation:!1},title:{text:null},series:[{name:"Return",data:e},{name:"Investment",data:t}],plotOptions:{column:{stacking:"normal"},series:{groupPadding:.1}},legend:{align:"left",symbolRadius:0,verticalAlign:"top",x:-18,itemMarginTop:-10},xAxis:{labels:{style:{whiteSpace:"nowrap"}},categories:i,tickLength:5,tickInterval:a},yAxis:{title:!1,labels:{overflow:"allow",formatter:function(){return"$"+Highcharts.numberFormat(this.value,0,".",",")}},tickAmount:5},credits:{enabled:!1},tooltip:{shadow:!1,padding:10,shared:!0}})}Highcharts.setOptions({lang:{thousandsSep:",",numericSymbols:[null,"M","G","T","P","E"]}}),"complete"===document.readyState||"interactive"===document.readyState?n():document.addEventListener("DOMContentLoaded",n)}},mounted:function(){this.getResults()}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
