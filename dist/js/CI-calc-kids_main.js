var calculator=new Vue({el:"#calculator",data:{principal:0,frequency:365,contribution:1,yearsToGrow:0,interestRate:7,totalPrincipal:"",totalReturn:"",futureBalance:""},methods:{getResults:function(){let t,e,a,n=this.principal,r=this.interestRate/100,s=this.frequency,o=18-this.yearsToGrow,l=this.contribution,u=n+l*o,c=n,h=0,m=[],g=[],d=["1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18"],f=5;for(i=0;i<s*o;i++)a=(c*=1+r/s)+(h=(h+l)*(1+r/s)),e=l*(i+1)+n,t=Math.round(a-e),m.push(e),g.push(t);if(m.unshift(n),g.unshift(0),m=m.filter((t,e)=>e%365==0),g=g.filter((t,e)=>e%365==0),this.yearsToGrow=Number(this.yearsToGrow),console.log(this.yearsToGrow),(d=d.slice(this.yearsToGrow)).unshift("Age "+this.yearsToGrow),console.log(d),m.length>21?f=10:m.length<6&&(f=1),this.drawChart(m,g,d,f),this.futureBalance=c+h,t=this.futureBalance-u,this.futureBalance>999999999){const t=[""," billion"," trillion"];let e=0;this.futureBalance/=999999999,e++,this.futureBalance=this.futureBalance.toPrecision(3),this.futureBalance+=t[e]}this.futureBalance=this.futureBalance.toLocaleString(void 0,{minimumFractionDigits:0,maximumFractionDigits:0})},drawChart:function(t,e,i,a){function n(){Highcharts.chart("chart-container-CIcalc",{chart:{type:"column",styledMode:!0,spacingBottom:0,spacingRight:20,spacingLeft:20,animation:!1},title:{text:null},series:[{name:"Return",data:e},{name:"Investment",data:t}],plotOptions:{column:{stacking:"normal"},series:{groupPadding:.1}},legend:{align:"left",symbolRadius:0,verticalAlign:"top",x:-18,itemMarginTop:-10},xAxis:{labels:{style:{whiteSpace:"nowrap"}},categories:i,tickLength:5,tickInterval:a},yAxis:{title:!1,labels:{overflow:"allow",formatter:function(){return"$"+Highcharts.numberFormat(this.value,0,".",",")}},tickAmount:5},credits:{enabled:!1},tooltip:{shadow:!1,padding:10,shared:!0,valuePrefix:"$"}})}Highcharts.setOptions({lang:{thousandsSep:",",numericSymbols:[null,"M","G","T","P","E"]}}),"complete"===document.readyState||"interactive"===document.readyState?n():document.addEventListener("DOMContentLoaded",n)}},mounted:function(){this.getResults()}});function limitNumber(){this.value.length>this.maxLength&&(this.value=this.value.slice(0,this.maxLength),type="number",maxlength="2")}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhbGN1bGF0b3IuanMiXSwibmFtZXMiOlsiY2FsY3VsYXRvciIsIlZ1ZSIsImVsIiwiZGF0YSIsInByaW5jaXBhbCIsImZyZXF1ZW5jeSIsImNvbnRyaWJ1dGlvbiIsInllYXJzVG9Hcm93IiwiaW50ZXJlc3RSYXRlIiwidG90YWxQcmluY2lwYWwiLCJ0b3RhbFJldHVybiIsImZ1dHVyZUJhbGFuY2UiLCJtZXRob2RzIiwiZ2V0UmVzdWx0cyIsInRvdGFsSW52ZXN0bWVudCIsImNvbWJpbmVkIiwiUCIsInRoaXMiLCJyIiwibiIsInQiLCJQTVQiLCJ0b3RhbENvbnRyaWJ1dGlvbnMiLCJmdk9mUHJpbmNpcGFsIiwiZnZPZkNvbnRyaWJ1dGlvbnMiLCJpRGF0YSIsInJEYXRhIiwiY2F0QXJyYXkiLCJ0aWNrSW50ZXJ2YWwiLCJpIiwiTWF0aCIsInJvdW5kIiwicHVzaCIsInVuc2hpZnQiLCJmaWx0ZXIiLCJlbGVtZW50IiwiaW5kZXgiLCJOdW1iZXIiLCJjb25zb2xlIiwibG9nIiwic2xpY2UiLCJsZW5ndGgiLCJkcmF3Q2hhcnQiLCJzdWZmaXhlcyIsInN1ZmZpeE51bSIsInRvUHJlY2lzaW9uIiwidG9Mb2NhbGVTdHJpbmciLCJ1bmRlZmluZWQiLCJtaW5pbXVtRnJhY3Rpb25EaWdpdHMiLCJtYXhpbXVtRnJhY3Rpb25EaWdpdHMiLCJkcmF3SGlnaGNoYXJ0cyIsIkhpZ2hjaGFydHMiLCJjaGFydCIsInR5cGUiLCJzdHlsZWRNb2RlIiwic3BhY2luZ0JvdHRvbSIsInNwYWNpbmdSaWdodCIsInNwYWNpbmdMZWZ0IiwiYW5pbWF0aW9uIiwidGl0bGUiLCJ0ZXh0Iiwic2VyaWVzIiwibmFtZSIsInBsb3RPcHRpb25zIiwiY29sdW1uIiwic3RhY2tpbmciLCJncm91cFBhZGRpbmciLCJsZWdlbmQiLCJhbGlnbiIsInN5bWJvbFJhZGl1cyIsInZlcnRpY2FsQWxpZ24iLCJ4IiwiaXRlbU1hcmdpblRvcCIsInhBeGlzIiwibGFiZWxzIiwic3R5bGUiLCJ3aGl0ZVNwYWNlIiwiY2F0ZWdvcmllcyIsInRpY2tMZW5ndGgiLCJ5QXhpcyIsIm92ZXJmbG93IiwiZm9ybWF0dGVyIiwibnVtYmVyRm9ybWF0IiwidmFsdWUiLCJ0aWNrQW1vdW50IiwiY3JlZGl0cyIsImVuYWJsZWQiLCJ0b29sdGlwIiwic2hhZG93IiwicGFkZGluZyIsInNoYXJlZCIsInZhbHVlUHJlZml4Iiwic2V0T3B0aW9ucyIsImxhbmciLCJ0aG91c2FuZHNTZXAiLCJudW1lcmljU3ltYm9scyIsImRvY3VtZW50IiwicmVhZHlTdGF0ZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJtb3VudGVkIiwibGltaXROdW1iZXIiLCJtYXhMZW5ndGgiLCJtYXhsZW5ndGgiXSwibWFwcGluZ3MiOiJBQUFBLElBQUFBLFdBQUEsSUFBQUMsSUFBQSxDQUNBQyxHQUFBLGNBQ0FDLEtBQUEsQ0FDQUMsVUFBQSxFQUNBQyxVQUFBLElBQ0FDLGFBQUEsRUFDQUMsWUFBQSxFQUNBQyxhQUFBLEVBQ0FDLGVBQUEsR0FDQUMsWUFBQSxHQUNBQyxjQUFBLElBR0FDLFFBQUEsQ0FFQUMsV0FBQSxXQUNBLElBUUFILEVBQ0FJLEVBQ0FDLEVBVkFDLEVBQUFDLEtBQUFiLFVBQ0FjLEVBQUFELEtBQUFULGFBQUEsSUFDQVcsRUFBQUYsS0FBQVosVUFDQWUsRUFBQSxHQUFBSCxLQUFBVixZQUNBYyxFQUFBSixLQUFBWCxhQUNBZ0IsRUFBQU4sRUFBQUssRUFBQUQsRUFDQUcsRUFBQVAsRUFDQVEsRUFBQSxFQUlBQyxFQUFBLEdBQ0FDLEVBQUEsR0FDQUMsRUFBQSxDQUFBLElBQUEsSUFBQSxJQUFBLElBQUEsSUFBQSxJQUFBLElBQUEsSUFBQSxJQUFBLEtBQUEsS0FBQSxLQUFBLEtBQUEsS0FBQSxLQUFBLEtBQUEsS0FBQSxNQUNBQyxFQUFBLEVBRUEsSUFBQUMsRUFBQSxFQUFBQSxFQUFBVixFQUFBQyxFQUFBUyxJQUdBZCxHQUZBUSxHQUFBLEVBQUFMLEVBQUFDLElBQ0FLLEdBQUFBLEVBQUFILElBQUEsRUFBQUgsRUFBQUMsSUFFQUwsRUFBQU8sR0FBQVEsRUFBQSxHQUFBYixFQUNBTixFQUFBb0IsS0FBQUMsTUFBQWhCLEVBQUFELEdBQ0FXLEVBQUFPLEtBQUFsQixHQUNBWSxFQUFBTSxLQUFBdEIsR0F1Q0EsR0FsQ0FlLEVBQUFRLFFBQUFqQixHQUNBVSxFQUFBTyxRQUFBLEdBR0FSLEVBQUFBLEVBQUFTLE9BQUEsQ0FBQUMsRUFBQUMsSUFDQUEsRUFBQSxLQUFBLEdBRUFWLEVBQUFBLEVBQUFRLE9BQUEsQ0FBQUMsRUFBQUMsSUFDQUEsRUFBQSxLQUFBLEdBR0FuQixLQUFBVixZQUFBOEIsT0FBQXBCLEtBQUFWLGFBRUErQixRQUFBQyxJQUFBdEIsS0FBQVYsY0FFQW9CLEVBQUFBLEVBQUFhLE1BQUF2QixLQUFBVixjQUNBMEIsUUFBQSxPQUFBaEIsS0FBQVYsYUFHQStCLFFBQUFDLElBQUFaLEdBR0FGLEVBQUFnQixPQUFBLEdBQ0FiLEVBQUEsR0FDQUgsRUFBQWdCLE9BQUEsSUFDQWIsRUFBQSxHQUdBWCxLQUFBeUIsVUFBQWpCLEVBQUFDLEVBQUFDLEVBQUFDLEdBRUFYLEtBQUFOLGNBQUFZLEVBQUFDLEVBRUFkLEVBQUFPLEtBQUFOLGNBQUFXLEVBRUFMLEtBQUFOLGNBQUEsVUFBQSxDQUNBLE1BQUFnQyxFQUFBLENBQUEsR0FBQSxXQUFBLGFBQ0EsSUFBQUMsRUFBQSxFQUNBM0IsS0FBQU4sZUFBQSxVQUNBaUMsSUFFQTNCLEtBQUFOLGNBQUFNLEtBQUFOLGNBQUFrQyxZQUFBLEdBRUE1QixLQUFBTixlQUFBZ0MsRUFBQUMsR0FHQTNCLEtBQUFOLGNBQUFNLEtBQUFOLGNBQUFtQyxvQkFBQUMsRUFDQSxDQUFBQyxzQkFBQSxFQUFBQyxzQkFBQSxLQUdBUCxVQUFBLFNBQUFqQixFQUFBQyxFQUFBQyxFQUFBQyxHQVNBLFNBQUFzQixJQUNBQyxXQUFBQyxNQUFBLHlCQUFBLENBQ0FBLE1BQUEsQ0FDQUMsS0FBQSxTQUNBQyxZQUFBLEVBQ0FDLGNBQUEsRUFDQUMsYUFBQSxHQUNBQyxZQUFBLEdBQ0FDLFdBQUEsR0FFQUMsTUFBQSxDQUNBQyxLQUFBLE1BRUFDLE9BQUEsQ0FBQSxDQUNBQyxLQUFBLFNBQ0EzRCxLQUFBdUIsR0FDQSxDQUNBb0MsS0FBQSxhQUNBM0QsS0FBQXNCLElBR0FzQyxZQUFBLENBQ0FDLE9BQUEsQ0FDQUMsU0FBQSxVQUVBSixPQUFBLENBQ0FLLGFBQUEsS0FHQUMsT0FBQSxDQUNBQyxNQUFBLE9BQ0FDLGFBQUEsRUFDQUMsY0FBQSxNQUNBQyxHQUFBLEdBQ0FDLGVBQUEsSUFFQUMsTUFBQSxDQUNBQyxPQUFBLENBQ0FDLE1BQUEsQ0FDQUMsV0FBQSxXQUdBQyxXQUFBbEQsRUFDQW1ELFdBQUEsRUFDQWxELGFBQUFBLEdBRUFtRCxNQUFBLENBQ0FwQixPQUFBLEVBQ0FlLE9BQUEsQ0FDQU0sU0FBQSxRQUNBQyxVQUFBLFdBQ0EsTUFBQSxJQUFBOUIsV0FBQStCLGFBQUFqRSxLQUFBa0UsTUFBQSxFQUFBLElBQUEsT0FHQUMsV0FBQSxHQUVBQyxRQUFBLENBQ0FDLFNBQUEsR0FFQUMsUUFBQSxDQUNBQyxRQUFBLEVBQ0FDLFFBQUEsR0FDQUMsUUFBQSxFQUNBQyxZQUFBLE9BdEVBeEMsV0FBQXlDLFdBQUEsQ0FDQUMsS0FBQSxDQUNBQyxhQUFBLElBQ0FDLGVBQUEsQ0FBQSxLQUFBLElBQUEsSUFBQSxJQUFBLElBQUEsUUF3RUEsYUFBQUMsU0FBQUMsWUFBQSxnQkFBQUQsU0FBQUMsV0FDQS9DLElBRUE4QyxTQUFBRSxpQkFBQSxtQkFBQWhELEtBS0FpRCxRQUFBLFdBQ0FsRixLQUFBSixnQkFJQSxTQUFBdUYsY0FDQW5GLEtBQUFrRSxNQUFBMUMsT0FBQXhCLEtBQUFvRixZQUNBcEYsS0FBQWtFLE1BQUFsRSxLQUFBa0UsTUFBQTNDLE1BQUEsRUFBQXZCLEtBQUFvRixXQUNBaEQsS0FBQSxTQUNBaUQsVUFBQSIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGNhbGN1bGF0b3IgPSBuZXcgVnVlKHtcbiAgICBlbDogJyNjYWxjdWxhdG9yJyxcbiAgICBkYXRhOiB7XG4gICAgICBwcmluY2lwYWw6IDAsXG4gICAgICBmcmVxdWVuY3k6MzY1LFxuICAgICAgY29udHJpYnV0aW9uOiAxLFxuICAgICAgeWVhcnNUb0dyb3c6IDAsXG4gICAgICBpbnRlcmVzdFJhdGU6IDcsXG4gICAgICB0b3RhbFByaW5jaXBhbDogJycsXG4gICAgICB0b3RhbFJldHVybjogJycsXG4gICAgICBmdXR1cmVCYWxhbmNlOiAnJyxcblxuICAgIH0sXG4gICAgbWV0aG9kczoge1xuICAgICAgLy8gZnVuY3Rpb25zIGdvIGhlcmVcbiAgICAgIGdldFJlc3VsdHM6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgbGV0IFAgPSB0aGlzLnByaW5jaXBhbCxcbiAgICAgICAgICAgIHIgPSB0aGlzLmludGVyZXN0UmF0ZS8xMDAsXG4gICAgICAgICAgICBuID0gdGhpcy5mcmVxdWVuY3ksXG4gICAgICAgICAgICB0ID0gMTgtdGhpcy55ZWFyc1RvR3JvdyxcbiAgICAgICAgICAgIFBNVCA9IHRoaXMuY29udHJpYnV0aW9uLFxuICAgICAgICAgICAgdG90YWxDb250cmlidXRpb25zID0gUCArIChQTVQqdCksXG4gICAgICAgICAgICBmdk9mUHJpbmNpcGFsID0gUCxcbiAgICAgICAgICAgIGZ2T2ZDb250cmlidXRpb25zID0gMCxcbiAgICAgICAgICAgIHRvdGFsUmV0dXJuLFxuICAgICAgICAgICAgdG90YWxJbnZlc3RtZW50LFxuICAgICAgICAgICAgY29tYmluZWQsXG4gICAgICAgICAgICBpRGF0YSA9IFtdLFxuICAgICAgICAgICAgckRhdGEgPSBbXSxcbiAgICAgICAgICAgIGNhdEFycmF5ID0gW1wiMVwiLFwiMlwiLFwiM1wiLFwiNFwiLFwiNVwiLFwiNlwiLFwiN1wiLFwiOFwiLFwiOVwiLFwiMTBcIixcIjExXCIsXCIxMlwiLFwiMTNcIixcIjE0XCIsXCIxNVwiLFwiMTZcIixcIjE3XCIsXCIxOFwiXSxcbiAgICAgICAgICAgIHRpY2tJbnRlcnZhbCA9IDUuXG5cbiAgICAgICAgZm9yIChpPTA7IGk8bip0OyBpKyspIHtcbiAgICAgICAgICAgIGZ2T2ZQcmluY2lwYWwgPSBmdk9mUHJpbmNpcGFsKigxK3Ivbik7XG4gICAgICAgICAgICBmdk9mQ29udHJpYnV0aW9ucyA9IChmdk9mQ29udHJpYnV0aW9ucytQTVQpKigxK3Ivbik7XG4gICAgICAgICAgICBjb21iaW5lZCA9IGZ2T2ZQcmluY2lwYWwgKyBmdk9mQ29udHJpYnV0aW9ucztcbiAgICAgICAgICAgIHRvdGFsSW52ZXN0bWVudCA9IFBNVCooaSsxKSArIFA7XG4gICAgICAgICAgICB0b3RhbFJldHVybiA9IE1hdGgucm91bmQoY29tYmluZWQgLSB0b3RhbEludmVzdG1lbnQpO1xuICAgICAgICAgICAgaURhdGEucHVzaCh0b3RhbEludmVzdG1lbnQpO1xuICAgICAgICAgICAgckRhdGEucHVzaCh0b3RhbFJldHVybik7XG5cbiAgICAgICAgfVxuXG5cbiAgICAgICAgaURhdGEudW5zaGlmdChQKTtcbiAgICAgICAgckRhdGEudW5zaGlmdCgwKTtcbiAgICAgICAgXG5cbiAgICAgICAgaURhdGEgPSBpRGF0YS5maWx0ZXIoKGVsZW1lbnQsIGluZGV4KSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gaW5kZXggJSAzNjUgPT09IDA7XG4gICAgICAgIH0pXG4gICAgICAgIHJEYXRhID0gckRhdGEuZmlsdGVyKChlbGVtZW50LCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIGluZGV4ICUgMzY1ID09PSAwO1xuICAgICAgICB9KVxuXG4gICAgICAgIHRoaXMueWVhcnNUb0dyb3cgPSBOdW1iZXIodGhpcy55ZWFyc1RvR3JvdylcblxuICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnllYXJzVG9Hcm93KVxuXG4gICAgICAgIGNhdEFycmF5ID0gY2F0QXJyYXkuc2xpY2UodGhpcy55ZWFyc1RvR3JvdylcbiAgICAgICAgY2F0QXJyYXkudW5zaGlmdChcIkFnZSBcIiArIHRoaXMueWVhcnNUb0dyb3cpO1xuICAgICAgICBcblxuICAgICAgICBjb25zb2xlLmxvZyhjYXRBcnJheSlcblxuXG4gICAgICAgIGlmIChpRGF0YS5sZW5ndGggPiAyMSkge1xuICAgICAgICAgICAgdGlja0ludGVydmFsID0gMTA7XG4gICAgICAgIH0gZWxzZSBpZiAoaURhdGEubGVuZ3RoIDwgNikge1xuICAgICAgICAgICAgdGlja0ludGVydmFsID0gMTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuZHJhd0NoYXJ0KGlEYXRhLHJEYXRhLGNhdEFycmF5LHRpY2tJbnRlcnZhbCk7XG5cbiAgICAgICAgdGhpcy5mdXR1cmVCYWxhbmNlID0gZnZPZlByaW5jaXBhbCArIGZ2T2ZDb250cmlidXRpb25zO1xuXG4gICAgICAgIHRvdGFsUmV0dXJuID0gdGhpcy5mdXR1cmVCYWxhbmNlIC0gdG90YWxDb250cmlidXRpb25zO1xuXG4gICAgICAgIGlmICh0aGlzLmZ1dHVyZUJhbGFuY2UgPiA5OTk5OTk5OTkpIHtcbiAgICAgICAgICAgIGNvbnN0IHN1ZmZpeGVzID0gW1wiXCIsIFwiIGJpbGxpb25cIixcIiB0cmlsbGlvblwiXTtcbiAgICAgICAgICAgIGxldCBzdWZmaXhOdW0gPSAwO1xuICAgICAgICAgICAgdGhpcy5mdXR1cmVCYWxhbmNlIC89IDk5OTk5OTk5OTtcbiAgICAgICAgICAgIHN1ZmZpeE51bSsrO1xuICAgICAgICBcbiAgICAgICAgICAgIHRoaXMuZnV0dXJlQmFsYW5jZSA9IHRoaXMuZnV0dXJlQmFsYW5jZS50b1ByZWNpc2lvbigzKTtcbiAgICAgICAgXG4gICAgICAgICAgICB0aGlzLmZ1dHVyZUJhbGFuY2UgKz0gc3VmZml4ZXNbc3VmZml4TnVtXTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuZnV0dXJlQmFsYW5jZSA9IHRoaXMuZnV0dXJlQmFsYW5jZS50b0xvY2FsZVN0cmluZyh1bmRlZmluZWQsXG4gICAgICAgICAgICB7J21pbmltdW1GcmFjdGlvbkRpZ2l0cyc6MCwnbWF4aW11bUZyYWN0aW9uRGlnaXRzJzowfSk7XG5cbiAgICAgIH0sXG4gICAgICBkcmF3Q2hhcnQ6IGZ1bmN0aW9uKGlEYXRhLHJEYXRhLGNhdEFycmF5LHRpY2tJbnRlcnZhbCkge1xuXG4gICAgICAgIEhpZ2hjaGFydHMuc2V0T3B0aW9ucyh7XG4gICAgICAgICAgICBsYW5nOiB7XG4gICAgICAgICAgICAgIHRob3VzYW5kc1NlcDogJywnLFxuICAgICAgICAgICAgICBudW1lcmljU3ltYm9sczogW251bGwsIFwiTVwiLCBcIkdcIiwgXCJUXCIsIFwiUFwiLCBcIkVcIl1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgZnVuY3Rpb24gZHJhd0hpZ2hjaGFydHMoKSB7XG4gICAgICAgICAgICBIaWdoY2hhcnRzLmNoYXJ0KCdjaGFydC1jb250YWluZXItQ0ljYWxjJywge1xuICAgICAgICAgICAgICAgIGNoYXJ0OiB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICdjb2x1bW4nLFxuICAgICAgICAgICAgICAgICAgICBzdHlsZWRNb2RlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBzcGFjaW5nQm90dG9tOiAwLFxuICAgICAgICAgICAgICAgICAgICBzcGFjaW5nUmlnaHQ6IDIwLFxuICAgICAgICAgICAgICAgICAgICBzcGFjaW5nTGVmdDogMjAsXG4gICAgICAgICAgICAgICAgICAgIGFuaW1hdGlvbjogZmFsc2VcbiAgICAgICAgICAgICAgICB9LCBcbiAgICAgICAgICAgICAgICB0aXRsZToge1xuICAgICAgICAgICAgICAgICAgICB0ZXh0OiBudWxsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBzZXJpZXM6IFt7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdSZXR1cm4nLFxuICAgICAgICAgICAgICAgICAgICBkYXRhOiByRGF0YVxuICAgICAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ0ludmVzdG1lbnQnLFxuICAgICAgICAgICAgICAgICAgICBkYXRhOiBpRGF0YVxuICAgICAgICAgICAgICAgIH1dLFxuICAgICAgICAgICAgICAgIC8vIGZvciBsaW5lIGNoYXJ0cyBvbmx5XG4gICAgICAgICAgICAgICAgcGxvdE9wdGlvbnM6IHtcbiAgICAgICAgICAgICAgICAgICAgY29sdW1uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzdGFja2luZzogJ25vcm1hbCdcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgc2VyaWVzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBncm91cFBhZGRpbmc6IDAuMVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBsZWdlbmQ6IHtcbiAgICAgICAgICAgICAgICAgICAgYWxpZ246ICdsZWZ0JyxcbiAgICAgICAgICAgICAgICAgICAgc3ltYm9sUmFkaXVzOiAwLFxuICAgICAgICAgICAgICAgICAgICB2ZXJ0aWNhbEFsaWduOiAndG9wJyxcbiAgICAgICAgICAgICAgICAgICAgeDogLTE4LFxuICAgICAgICAgICAgICAgICAgICBpdGVtTWFyZ2luVG9wOiAtMTAsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB4QXhpczoge1xuICAgICAgICAgICAgICAgICAgICBsYWJlbHM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2hpdGVTcGFjZTogJ25vd3JhcCcsXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBjYXRlZ29yaWVzOiBjYXRBcnJheSxcbiAgICAgICAgICAgICAgICAgICAgdGlja0xlbmd0aDogNSxcbiAgICAgICAgICAgICAgICAgICAgdGlja0ludGVydmFsOiB0aWNrSW50ZXJ2YWxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHlBeGlzOiB7XG4gICAgICAgICAgICAgICAgICAgIHRpdGxlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgbGFiZWxzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvdmVyZmxvdzogJ2FsbG93JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvcm1hdHRlcjogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnJCcgKyBIaWdoY2hhcnRzLm51bWJlckZvcm1hdCh0aGlzLnZhbHVlLDAsJy4nLCcsJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB0aWNrQW1vdW50OiA1LFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY3JlZGl0czoge1xuICAgICAgICAgICAgICAgICAgICBlbmFibGVkOiBmYWxzZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgdG9vbHRpcDoge1xuICAgICAgICAgICAgICAgICAgICBzaGFkb3c6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMCxcbiAgICAgICAgICAgICAgICAgICAgc2hhcmVkOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZVByZWZpeDogJyQnXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIGlmIChkb2N1bWVudC5yZWFkeVN0YXRlID09PSAnY29tcGxldGUnIHx8IGRvY3VtZW50LnJlYWR5U3RhdGUgPT09ICdpbnRlcmFjdGl2ZScpIHtcbiAgICAgICAgICAgIGRyYXdIaWdoY2hhcnRzKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCBkcmF3SGlnaGNoYXJ0cyk7XG4gICAgICAgIH1cblxuICAgICAgfVxuICAgIH0sXG4gICAgbW91bnRlZDogZnVuY3Rpb24oKXtcbiAgICAgICAgdGhpcy5nZXRSZXN1bHRzKClcbiAgICAgfSxcbiAgfSlcblxuICBmdW5jdGlvbiBsaW1pdE51bWJlciAoKSB7XG4gICAgaWYgKHRoaXMudmFsdWUubGVuZ3RoID4gdGhpcy5tYXhMZW5ndGgpIHtcbiAgICAgICAgdGhpcy52YWx1ZSA9IHRoaXMudmFsdWUuc2xpY2UoMCwgdGhpcy5tYXhMZW5ndGgpO1xuICAgICAgICB0eXBlID0gXCJudW1iZXJcIlxuICAgICAgICBtYXhsZW5ndGggPSBcIjJcIlxuICAgIH1cbiAgfSJdfQ==
